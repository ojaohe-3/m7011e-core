plugins {
	id 'java-library'
	id 'groovy'
	id 'maven-publish'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.graalvm.buildtools.native' version '0.10.3'
	id "pl.allegro.tech.build.axion-release" version "1.18.7"
}

scmVersion {
	versionIncrementer('incrementPatch')
	ignoreUncommittedChanges.set(false)
	tag {
		versionIncrementer('incrementPatch')
		prefix.set('v.')

	}
}

group = 'm7011e.the-homeric-odyssey'
project.version = scmVersion.version

allprojects {
	apply plugin: 'java-library'
	apply plugin: 'groovy'
	apply plugin: 'maven-publish'

	project.version = rootProject.version
}

subprojects {
	apply plugin: 'java-library'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	maven {
		url("${reposiliteUrl}/snapshots")
		name "Reposilite"
		credentials(PasswordCredentials) {
			username = reposiliteUser
			password = reposiliteSecret
		}
		authentication {
			basic(BasicAuthentication)
		}
	}
	maven {
		url("${reposiliteUrl}/releases")
		name "Reposilite"
		credentials(PasswordCredentials) {
			username = reposiliteUser
			password = reposiliteSecret
		}
		authentication {
			basic(BasicAuthentication)
		}
	}
}

publishing {
	repositories {
		maven {
			if (project.version.toString().endsWith('-SNAPSHOT')) {
				url("${reposiliteUrl}/snapshots")
			} else {
				url("${reposiliteUrl}/releases")
			}
			name "Reposilite"
			credentials(PasswordCredentials) {
				username = reposiliteUser
				password = reposiliteSecret
			}
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
	publications {

		maven(MavenPublication) {
			groupId = group
			version = version
			from components.java
		}
	}

}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
